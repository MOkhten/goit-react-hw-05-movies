{"version":3,"file":"static/js/159.c0a7d8a7.chunk.js","mappings":"4SAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qLASTE,EAAOF,EAAAA,GAAAA,GAAH,6YAkBJG,EAAOH,EAAAA,GAAAA,GAAH,0VAoBJI,EAAMJ,EAAAA,GAAAA,IAAH,8I,SCShB,EArDa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,EAAU,WAFI,UAGmBG,EAAAA,EAAAA,MAHnB,gBAGGC,EAHH,EAGNC,QACRC,QAAQC,IAAIH,GACZN,EACEM,EAAMI,KAAI,SAAAC,GAAI,MAAK,CACjBC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,YAAaH,EAAKG,YAHN,KAShBZ,EAAU,YAfI,kDAkBfa,EAAAA,GAAAA,MAAY,iDACXb,EAAU,QAnBI,0DAAH,qDAsBdE,GACF,GAAE,IAIH,OACE,6BACE,4CACA,UAACR,EAAD,kBACGG,QADH,IACGA,OADH,EACGA,EAAQW,KAAI,SAAAC,GAAI,OACf,UAAChB,EAAD,YACE,UAACH,EAAD,CAAWwB,GAAE,kBAAaL,EAAKC,IAA/B,WAEE,SAACf,EAAD,CAAKoB,IAAG,UAVL,mCAUK,OAAcN,EAAKG,aAAeI,IAAKP,EAAKE,QAFtD,QAGC,uBAAIF,EAAKE,UAJAF,EAAKC,GADF,IAQJ,YAAXX,IAAwB,SAACkB,EAAA,EAAD,KAC5B,SAAC,KAAD,SAML,C,mMCxDKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMhB,EAAiB,mCAAG,oGACRgB,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACJJ,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEK,EAAlE,gCADI,cACrBH,EADqB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAY,mCAAG,WAAOd,GAAP,uFACAS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,oBAAiCQ,EAAjC,oBADA,cACjBE,EADiB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZI,EAAe,mCAAG,WAAOf,GAAP,uFACHS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCQ,EAAzC,oBADG,cACpBE,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAe,mCAAG,WAAOhB,GAAP,uFACHS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCQ,EAAzC,2BADG,cACpBE,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,qD","sources":["Pages/Home/Home.styles.js","Pages/Home/Home.jsx","api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled(Link)`\ntext-decoration: none;\ncolor: black;\nline-height: 1.4;\ntransition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }`;\n\nexport const Item = styled.li`\n  \n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  padding: 5px; \n  border-radius: 5px;\n  transition: all 500ms cubic-bezier(0, 0, 0.2, 1) 0ms;\n/* box-shadow: 0px 8px 43px rgba(255, 107, 1, 0.6); */\n  &:hover{\n    /* background-color: #000;\n    color: #FFF; */\n    box-shadow: 0px 8px 43px rgba(255, 107, 1, 0.6);\n    transform: scale(1.04);\n}\n\n`;\n\nexport const List = styled.ul`\n margin-top: 20px;\n  margin-bottom: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    @keyframes rotateY {\n  0% {\n    transform: perspective(400px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(400px) rotateY(15deg);\n  }\n} \n`;\n\nexport const Img = styled.img`\n\n  height: 400px;\n  min-width: 250px;\n  width: 100%;\n    margin-bottom: 10px;\n  border-radius: 5px;\n  \n  \n    `","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from 'components/Loader/Loader';\nimport { MovieItem, Item, List, Img  } from './Home.styles';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getTrends = async () => {\n      try {\n        setStatus('loading');\n        const { results: films } = await getTrendingMovies();\n        console.log(films);\n        setMovies(\n          films.map(film => ({\n            id: film.id,\n            title: film.title,\n            poster_path: film.poster_path,\n          }))\n  \n        );\n     \n\n        setStatus('finished');\n      }\n      catch (error) {\n       toast.error('Oops! Something went wrong! Please try again.');\n        setStatus('idle');\n      }\n    }\n     getTrends();\n  }, []);\n\n  const imgUrl = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <main >\n      <h1>Trending today</h1>\n      <List >\n        {movies?.map(film => (\n          <Item key ={film.id}>\n            <MovieItem to={`/movies/${film.id}`}>\n             \n              <Img src={`${imgUrl}${film.poster_path}`} alt={film.title} /> </MovieItem>\n             <p>{film.title}</p>\n         </Item>\n       ))}\n         {status === 'loading' && <Loader />}\n      <Toaster />\n\n      </List>\n      \n    </main>\n  );\n};\n\nexport default Home;","import axios from 'axios';\nconst API_KEY = 'c44487c03ffebabedae8b57076099ca1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n}\n\nexport const getMovieById = async (id) => {\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n  \nexport const getMovieCredits = async (id) => {\n     const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n     const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["MovieItem","styled","Link","Item","List","Img","useState","movies","setMovies","status","setStatus","useEffect","getTrends","getTrendingMovies","films","results","console","log","map","film","id","title","poster_path","toast","to","src","alt","Loader","API_KEY","axios","response","data","getSearchMovies","query","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}