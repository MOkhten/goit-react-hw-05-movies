{"version":3,"file":"static/js/186.73b7cf1b.chunk.js","mappings":"mTACMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACJL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEM,EAAlE,gCADI,cACrBH,EADqB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAY,mCAAG,WAAOC,GAAP,uFACAP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADA,cACjBG,EADiB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADG,cACpBG,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADG,cACpBG,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,qD,mIC2B5B,UA7CgB,WACd,IAAQI,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,MAGAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEID,EAAU,WAFd,UAGyBN,EAAAA,EAAAA,IAAgBF,GAHzC,OAGUU,EAHV,OAIIJ,EAAUI,GACVF,EAAU,YALd,gDAQIG,EAAAA,GAAAA,MAAY,iDACZH,EAAU,QATd,0DAFc,uBAAC,WAAD,wBAcdI,EACD,GAAE,CAACZ,IACJ,IAAQa,EAAYR,EAAZQ,QAER,OACGA,GAAWA,EAAQC,OAAS,GAC3B,+BACGD,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASjB,EAAS,EAATA,GAC/B,OACE,4BACE,wBAAKgB,KACL,uBAAIC,MAFIjB,EAKb,IAEW,YAAXO,IAAwB,SAAC,IAAD,KACzB,SAAC,KAAD,QACY,2CAGnB,C","sources":["api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'c44487c03ffebabedae8b57076099ca1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n}\n\nexport const getMovieById = async (id) => {\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n  \nexport const getMovieCredits = async (id) => {\n     const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n     const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n  const [status, setStatus] = useState('idle');\n  \n  \n  useEffect(() => {\n  \n    async function getReview() {\n      try {\n        setStatus('loading');\n        const result = await getMovieReviews(id);\n        setReview(result);\n        setStatus('finished');\n      }\n      catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n        setStatus('idle');\n      }\n    }\n    getReview();\n  }, [id]);\n  const { results } = review;\n\n  return (\n     results && results.length > 0 ? (\n      <section>\n        {results.map(({ author, content, id }) => {\n          return (\n            <div key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </div>\n          );\n        })}\n    \n        {status === 'loading' && <Loader />}\n        <Toaster />\n      </section>) : <p>Review not found</p>\n  \n  );\n};\n\n\n\nexport default Reviews;"],"names":["API_KEY","axios","getTrendingMovies","response","data","getSearchMovies","query","getMovieById","id","getMovieCredits","getMovieReviews","useParams","useState","review","setReview","status","setStatus","useEffect","result","toast","getReview","results","length","map","author","content"],"sourceRoot":""}