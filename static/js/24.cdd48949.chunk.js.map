{"version":3,"file":"static/js/24.cdd48949.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDeatails.styles.js","Pages/MovieDetails/MovieDetails.jsx","api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCard = styled.div`\ndisplay:flex;`\n\nexport const BtnArrow = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin: 20px 0;\n  padding: 20px;\n  text-decoration: none;\n  border: transparent;\n  background-color: white;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }\n`;\n\nexport const Poster = styled.img`\nwidth: 320px;\n  border-radius: 5px;`\n\nexport const MovieDescription = styled.div`\n  margin-left: 30px;`\n\n  export const InfoTitle = styled.h2`\n  font-weight: 700;\n  color: #ff4500;\n`;\n\nexport const Info = styled.span`\n  font-weight: 400;\n  color: #000000;\n`;\n\nexport const EditionalInfo = styled.div`\ndisplay: block;\nmargin: 15px 0;\n  padding: 0 16px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;`\n\n  export const MovieLink = styled(Link)`\ntext-decoration: none;\ncolor: black;\nline-height: 1.4;\nmargin-bottom: 35px;\ntransition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }`","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { MovieCard, BtnArrow, Poster, MovieDescription, InfoTitle, Info, EditionalInfo, MovieLink } from './MovieDeatails.styles';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    console.log(MovieDetails);\n   async function getMovies() {\n      try {\n        setStatus('loading');\n          const result  = await getMovieById(id);\n        setMovie(result);\n        setStatus('finished');\n      }\n      catch (error) {\n       toast.error('Oops! Something went wrong! Please try again.');\n        setStatus('idle');\n      }\n    }\n     getMovies();\n  }, [id]);\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <>\n      <BtnArrow onClick={() => navigate(-1)}><AiOutlineArrowLeft />Back</BtnArrow>\n    <MovieCard>\n      \n          <div>\n              <Poster  src={poster_path\n              ? `${BASE_IMG_URL}${poster_path}`\n              : 'https://i.ibb.co/4ThsTsv/poster-coming-soon.jpg'} alt=\"movie poster\" />\n          </div>\n          <MovieDescription>\n      <h1>\n         {title}\n      </h1>\n      <InfoTitle>\n         User Score: <Info>{Number(vote_average * 10).toFixed()}%</Info>\n      </InfoTitle>\n      <InfoTitle>\n        Overview: <Info>{overview}</Info>\n      </InfoTitle>\n      <InfoTitle>\n                  Genres: <Info>{genres && genres.map(genre => genre.name).join(', ')}</Info>\n      </InfoTitle>\n      \n          </MovieDescription>\n        \n      </MovieCard>\n      <EditionalInfo>\n        <h3>Editional info:</h3>\n        <p>\n          <MovieLink to='cast'>Cast</MovieLink>\n        </p>\n        <p><MovieLink to='reviews'>Reviews</MovieLink></p>\n      </EditionalInfo>\n      \n       <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n          {status === 'loading' && <Loader />}\n          <Toaster />\n      </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = 'c44487c03ffebabedae8b57076099ca1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n}\n\nexport const getMovieById = async (id) => {\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n  \nexport const getMovieCredits = async (id) => {\n     const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n     const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["MovieCard","styled","BtnArrow","Poster","MovieDescription","InfoTitle","Info","EditionalInfo","MovieLink","Link","MovieDetails","id","useParams","useState","movie","setMovie","status","setStatus","navigate","useNavigate","useEffect","getMovieById","result","toast","console","log","getMovies","poster_path","title","vote_average","overview","genres","onClick","src","alt","Number","toFixed","map","genre","name","join","to","Suspense","fallback","Loader","API_KEY","axios","getTrendingMovies","response","data","getSearchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}