{"version":3,"file":"static/js/159.ef7dd16b.chunk.js","mappings":"4RAGaA,GAAYC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,qL,SCkDtB,EA/Ca,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,EAAU,WAFI,UAGmBG,EAAAA,EAAAA,MAHnB,gBAGGC,EAHH,EAGNC,QACRC,QAAQC,IAAIH,GACZN,EACEM,EAAMI,KAAI,SAAAC,GAAI,MAAK,CACjBC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MAFA,KAQhBX,EAAU,YAdI,kDAiBfY,EAAAA,GAAAA,MAAY,iDACXZ,EAAU,QAlBI,0DAAH,qDAqBdE,GACF,GAAE,KAGD,6BACE,4CACA,iCACGL,QADH,IACGA,OADH,EACGA,EAAQW,KAAI,SAAAC,GAAI,OACf,yBACE,SAAChB,EAAD,CAAWoB,GAAE,kBAAaJ,EAAKC,IAA/B,SAAsCD,EAAKE,SADnCF,EAAKC,GADA,IAKJ,YAAXX,IAAwB,SAACe,EAAA,EAAD,KAC5B,SAAC,KAAD,SAML,C,mMClDKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMb,EAAiB,mCAAG,oGACRa,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACJJ,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEK,EAAlE,gCADI,cACrBH,EADqB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAY,mCAAG,WAAOX,GAAP,uFACAM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCK,EAAjC,oBADA,cACjBE,EADiB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZI,EAAe,mCAAG,WAAOZ,GAAP,uFACHM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCK,EAAzC,oBADG,cACpBE,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAe,mCAAG,WAAOb,GAAP,uFACHM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCK,EAAzC,2BADG,cACpBE,EADoB,yBAEpBA,EAASC,MAFW,2CAAH,qD","sources":["Pages/Home/Home.styles.js","Pages/Home/Home.jsx","api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled(Link)`\ntext-decoration: none;\ncolor: black;\nline-height: 1.4;\ntransition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }`","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from 'components/Loader/Loader';\nimport { MovieItem } from './Home.styles';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getTrends = async () => {\n      try {\n        setStatus('loading');\n        const { results: films } = await getTrendingMovies();\n        console.log(films);\n        setMovies(\n          films.map(film => ({\n            id: film.id,\n            title: film.title,\n          }))\n  \n        );\n     \n\n        setStatus('finished');\n      }\n      catch (error) {\n       toast.error('Oops! Something went wrong! Please try again.');\n        setStatus('idle');\n      }\n    }\n     getTrends();\n  }, []);\n\n  return (\n    <main >\n      <h1>Trending today</h1>\n      <ul>\n        {movies?.map(film => (\n          <li key ={film.id}>\n            <MovieItem to={`/movies/${film.id}`}>{film.title}</MovieItem>\n         </li>\n       ))}\n         {status === 'loading' && <Loader />}\n      <Toaster />\n\n      </ul>\n      \n    </main>\n  );\n};\n\nexport default Home;","import axios from 'axios';\nconst API_KEY = 'c44487c03ffebabedae8b57076099ca1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n}\n\nexport const getMovieById = async (id) => {\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n  \nexport const getMovieCredits = async (id) => {\n     const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n     const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["MovieItem","styled","Link","useState","movies","setMovies","status","setStatus","useEffect","getTrends","getTrendingMovies","films","results","console","log","map","film","id","title","toast","to","Loader","API_KEY","axios","response","data","getSearchMovies","query","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}